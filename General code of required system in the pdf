#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_CUSTOMERS 100
#define MAX_NAME_LENGTH 50
#define MAX_ADDRESS_LENGTH 100

// Structure for storing customer information
struct Customer {
    int id;
    char name[MAX_NAME_LENGTH];
    char dob[11]; // Date of birth in format YYYY-MM-DD
    char address[MAX_ADDRESS_LENGTH];
    long long int phone;
    float balance;
    char accountType[20];
    int cardNumber;
    float creditCardBalance;
};

// Array to store customer information
struct Customer customers[MAX_CUSTOMERS];
int numCustomers = 0;

// Function prototypes
void new_acc();
void transact();
void transfer();
void apply_for_card();
void pay_ur_credit_card();
void view_profile();
void bank_statement();
void erase();

int main() {
    int choice;

    do {
        printf("\nBank Management System Menu:\n");
        printf("1. New Account\n");
        printf("2. Transaction\n");
        printf("3. Transfer\n");
        printf("4. Apply for Card\n");
        printf("5. Pay Credit Card\n");
        printf("6. View Profile\n");
        printf("7. Bank Statement\n");
        printf("8. Delete Account\n");
        printf("9. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                new_acc();
                break;
            case 2:
                transact();
                break;
            case 3:
                transfer();
                break;
            case 4:
                apply_for_card();
                break;
            case 5:
                pay_ur_credit_card();
                break;
            case 6:
                view_profile();
                break;
            case 7:
                bank_statement();
                break;
            case 8:
                erase();
                break;
            case 9:
                printf("Exiting program. Goodbye!\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 9);

    return 0;
}

void new_acc() {
    // Implementation for creating a new customer account
    // Ask for personal and banking details and store them in the customers array
}

void transact() {
    // Implementation for depositing and withdrawing money from a customer account
}

void transfer() {
    // Implementation for transferring money between customer accounts
}

void apply_for_card() {
    // Implementation for creating a new credit card assigned to a customer account
}

void pay_ur_credit_card() {
    // Implementation for checking credit card balance and paying installments
}

void view_profile() {
    // Implementation for viewing customer's banking information
}

void bank_statement() {
    // Implementation for generating a bank statement for a customer account
}

void erase() {
    // Implementation for deleting a customer account
}